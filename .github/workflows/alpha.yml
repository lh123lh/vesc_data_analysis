name: Alpha Build

on:
  workflow_dispatch:
  push:
    branches: [main]
    tags-ignore: [updater, alpha]
permissions: write-all
env:
  CARGO_INCREMENTAL: 0
  RUST_BACKTRACE: short
concurrency:
  # only allow per workflow per commit (and not pr) to run at a time
  group: "${{ github.workflow }} - ${{ github.head_ref || github.ref }}"
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  alpha:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            target: aarch64-pc-windows-msvc
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Rust Stable
        uses: dtolnay/rust-toolchain@stable

      - name: Add Rust Target
        run: rustup target add ${{ matrix.target }}

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri
          cache-all-crates: true
          cache-on-failure: true

      - name: Install dependencies (ubuntu only)
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libudev libwebkit2gtk-4.1-dev libayatana-appindicator3-dev librsvg2-dev patchelf

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Pnpm install
        run: |
          pnpm i

      - name: Tauri build
        uses: tauri-apps/tauri-action@v0
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: alpha
          releaseName: "Vesc Data Aanlysis"
          releaseBody: "More new features are now supported."
          releaseDraft: false
          prerelease: true
          tauriScript: pnpm tauri
          args: --target ${{ matrix.target }}

      - name: Portable Bundle
        if: matrix.os == 'windows-latest'
        run: pnpm portable ${{ matrix.target }} --alpha
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update_tag:
    name: Update tag
    runs-on: ubuntu-latest
    needs: [alpha]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set Env
        run: |
          echo "BUILDTIME=$(TZ=Asia/Shanghai date)" >> $GITHUB_ENV
        shell: bash

      - name: Update Tag
        uses: richardsimko/update-tag@v1
        with:
          tag_name: alpha
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: |
          cat > release.txt << 'EOF'
          ## 我应该下载哪个版本？

          ### Linux
          - Linux 64位: amd64.deb/amd64.rpm

          ### Windows (Win7 用户请查看下面FAQ中的解决方案)
          #### 正常版本(推荐)
          - 64位: x64-setup.exe
          - arm64架构: arm64-setup.exe
          #### 便携版问题很多不再提供
          #### 内置Webview2版(体积较大, 仅在企业版系统或无法安装webview2时使用)
          - 64位: x64_fixed_webview2-setup.exe
          - arm64架构: arm64_fixed_webview2-setup.exe

          Created at  ${{ env.BUILDTIME }}.
          EOF

      - name: Upload Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: alpha
          name: "Vesc Data Aanlysis"
          body_path: release.txt
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}
          generate_release_notes: true